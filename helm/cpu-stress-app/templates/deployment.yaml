apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cpu-stress-app.fullname" . }}
  labels:
    {{- include "cpu-stress-app.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "cpu-stress-app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cpu-stress-app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cpu-stress-app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["sh", "-c"]
          args:
            - |
              echo "ðŸš€ Starting CPU stress test application..."
              echo "CPU Limit: {{ .Values.resources.limits.cpu }}"
              echo "Target Intensity: {{ .Values.cpuStress.intensity }}%"
              echo "Duration: {{ .Values.cpuStress.duration }}s"
              
              while true; do
                echo "$(date): Starting CPU stress cycle..."
                
                # Create CPU stress by running multiple background processes
                for i in $(seq 1 4); do
                  # Each process will consume CPU
                  (while true; do :; done) &
                done
                
                # Let it run for the specified duration
                sleep {{ .Values.cpuStress.duration }}
                
                # Kill background processes
                jobs -p | xargs -r kill
                
                echo "$(date): CPU stress cycle completed, restarting..."
                sleep 5
              done
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
