# Auto-fix applied by Kubernetes Alert Manager
# Timestamp: 2025-09-23T19:12:27.775Z

image:
  registry: docker.io
  repository: traefik
  tag: null
  pullPolicy: IfNotPresent
  # -- Enable deployment
  # -- Deployment or DaemonSet
  # -- Number of pods of the deployment (only applies when kind == Deployment)
  # -- Number of old history to retain to allow rollback (If not set, default Kubernetes value is set to 10)
  # -- Amount of time (in seconds) before Kubernetes will send the SIGKILL signal if Traefik does not shut down
  # -- The minimum number of seconds Traefik needs to be up and running before the DaemonSet/Deployment controller considers it available
  ## -- Override the liveness/readiness port. This is useful to integrate traefik
  ## with an external Load Balancer that performs healthchecks.
  ## Default: ports.traefik.port
  ## -- Override the liveness/readiness host. Useful for getting ping to respond on non-default entryPoint.
  ## Default: ports.traefik.hostIP if set, otherwise Pod IP
  ## -- Override the liveness/readiness scheme. Useful for getting ping to
  ## respond on websecure entryPoint.
  ## -- Override the readiness path.
  ## Default: /ping
  # -- Override the liveness path.
  # Default: /ping
  # -- Additional deployment annotations (e.g. for jaeger-operator sidecar injection)
  # -- Additional deployment labels (e.g. for filtering deployment by custom labels)
  # -- Additional pod annotations (e.g. for mesh injection or prometheus scraping)
  # It supports templating. One can set it with values like traefik/name: '{{ template "traefik.name" . }}'
  # -- Additional Pod labels (e.g. for filtering Pod by custom labels)
  # -- Additional containers (e.g. for metric offloading sidecars)
  # https://docs.datadoghq.com/developers/dogstatsd/unix_socket/?tab=host
  # - name: socat-proxy
  #   image: alpine/socat:1.0.5
  #   args: ["-s", "-u", "udp-recv:8125", "unix-sendto:/socket/socket"]
  #   volumeMounts:
  #     - name: dsdsocket
  #       mountPath: /socket
  # -- Additional volumes available for use with initContainers and additionalContainers
  # - name: dsdsocket
  #   hostPath:
  #     path: /var/run/statsd-exporter
  # -- Additional initContainers (e.g. for setting file permission as shown below)
  # The "volume-permissions" init container is required if you run into permission issues.
  # Related issue: https://github.com/traefik/traefik-helm-chart/issues/396
  # - name: volume-permissions
  #   image: busybox:latest
  #   command: ["sh", "-c", "touch /data/acme.json; chmod -v 600 /data/acme.json"]
  #   volumeMounts:
  #     - name: data
  #       mountPath: /data
  # -- Use process namespace sharing
  # -- Custom pod DNS policy. Apply if `hostNetwork: true`
  # -- Custom pod [DNS config](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.30/#poddnsconfig-v1-core)
  # -- Custom [host aliases](https://kubernetes.io/docs/tasks/network/customize-hosts-file-for-pods/)
  # -- Pull secret for fetching traefik container image
  # -- Pod lifecycle actions
  # preStop:
  #   sleep:
  #     seconds: 20
  # postStart:
  #   httpGet:
  #     path: /ping
  #     port: 8080
  #     host: localhost
  #     scheme: HTTP
  # -- Set a runtimeClassName on pod
  # -- Percentage of memory limit to set for GOMEMLIMIT
  # -- set as decimal (0.9 = 90%, 0.95 = 95% etc)
  # -- only takes effect when resources.limits.memory is set
# -- [Pod Disruption Budget](https://kubernetes.io/docs/reference/kubernetes-api/policy-resources/pod-disruption-budget-v1/)
commonLabels: {}
# -- Create a default IngressClass for Traefik
deployment:
  enabled: true
  kind: Deployment
  replicas: 3
  revisionHistoryLimit: null
  terminationGracePeriodSeconds: 60
  minReadySeconds: 0
  healthchecksPort: null
  healthchecksHost: ""
  healthchecksScheme: null
  readinessPath: ""
  livenessPath: ""
  annotations: {}
  labels: {}
  podAnnotations: {}
  podLabels: {}
  additionalContainers: []
  additionalVolumes: []
  initContainers: []
  shareProcessNamespace: false
  dnsPolicy: ""
  dnsConfig: {}
  hostAliases: []
  imagePullSecrets: []
  lifecycle: {}
  runtimeClassName: ""
  goMemLimitPercentage: 0.9
podDisruptionBudget:
  enabled: true
  maxUnavailable: 1
  minAvailable: null
  # -- Can be used to use globally v2 router syntax. Deprecated since v3.4 /!\.
  # See https://doc.traefik.io/traefik/v3.0/migration/v2-to-v3/#new-v3-syntax-notable-changes
# Traefik experimental features
ingressClass:
  enabled: true
  isDefaultClass: true
  name: ""
  # -- Defines whether all plugins must be loaded successfully for Traefik to start
    # -- Enables the FastProxy implementation.
    # -- Enable debug mode for the FastProxy implementation.
    # -- Enable traefik experimental GatewayClass CRD
  # -- Enable experimental plugins
  # -- Enable experimental local plugins
core:
  defaultRuleSyntax: ""
  # -- When providers.kubernetesGateway.enabled, deploy a default gateway
  # -- Set a custom name to gateway
  # -- By default, Gateway is created in the same `Namespace` than Traefik.
  # -- Additional gateway annotations (e.g. for cert-manager.io/issuer)
  # -- [Infrastructure](https://kubernetes.io/blog/2023/11/28/gateway-api-ga/#gateway-infrastructure-labels)
  # -- Define listeners
      # -- Port is the network port. Multiple listeners may use the same port, subject to the Listener compatibility rules.
      # The port must match a port declared in ports section.
      # -- Optional hostname. See [Hostname](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.Hostname)
      # Specify expected protocol on this listener. See [ProtocolType](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.ProtocolType)
      # -- (object) Routes are restricted to namespace of the gateway [by default](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.FromNamespaces
    # websecure listener is disabled by default because certificateRefs needs to be added,
    # or you may specify TLS protocol with Passthrough mode and add "--providers.kubernetesGateway.experimentalChannel=true" in additionalArguments section.
    # websecure:
    #   # -- Port is the network port. Multiple listeners may use the same port, subject to the Listener compatibility rules.
    #   # The port must match a port declared in ports section.
    #   port: 8443
    #   # -- Optional hostname. See [Hostname](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.Hostname)
    #   hostname:
    #   # Specify expected protocol on this listener See [ProtocolType](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.ProtocolType)
    #   protocol: HTTPS
    #   # -- Routes are restricted to namespace of the gateway [by default](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.FromNamespaces)
    #   namespacePolicy:
    #   # -- Add certificates for TLS or HTTPS protocols. See [GatewayTLSConfig](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io%2fv1.GatewayTLSConfig)
    #   certificateRefs:
    #   # -- TLS behavior for the TLS session initiated by the client. See [TLSModeType](https://gateway-api.sigs.k8s.io/reference/spec/#gateway.networking.k8s.io/v1.TLSModeType).
    #   mode:
experimental:
  abortOnPluginFailure: false
  fastProxy:
    enabled: false
    debug: false
  kubernetesGateway:
    enabled: false
  plugins: {}
  localPlugins: {}
  # -- When providers.kubernetesGateway.enabled and gateway.enabled, deploy a default gatewayClass
  # -- Set a custom name to GatewayClass
  # -- Additional gatewayClass labels (e.g. for filtering gateway objects by custom labels)
# -- Only dashboard & healthcheck IngressRoute are supported. It's recommended to create workloads CR outside of this Chart.
gateway:
  enabled: true
  name: ""
  namespace: ""
  annotations: {}
  infrastructure: {}
  listeners:
    web:
      port: 8000
      hostname: ""
      protocol: HTTP
      namespacePolicy: null
    # -- Create an IngressRoute for the dashboard
    # -- Additional ingressRoute annotations (e.g. for kubernetes.io/ingress.class)
    # -- Additional ingressRoute labels (e.g. for filtering IngressRoute by custom labels)
    # -- The router match rule used for the dashboard ingressRoute
    # -- The internal service used for the dashboard ingressRoute
    # -- Specify the allowed entrypoints to use for the dashboard ingress route, (e.g. traefik, web, websecure).
    # By default, it's using traefik entrypoint, which is not exposed.
    # /!\ Do not expose your dashboard without any protection over the internet /!\
    # -- Additional ingressRoute middlewares (e.g. for authentication)
    # -- TLS options (e.g. secret containing certificate)
    # -- Create an IngressRoute for the healthcheck probe
    # -- Additional ingressRoute annotations (e.g. for kubernetes.io/ingress.class)
    # -- Additional ingressRoute labels (e.g. for filtering IngressRoute by custom labels)
    # -- The router match rule used for the healthcheck ingressRoute
    # -- The internal service used for the healthcheck ingressRoute
    # -- Specify the allowed entrypoints to use for the healthcheck ingress route, (e.g. traefik, web, websecure).
    # By default, it's using traefik entrypoint, which is not exposed.
    # -- Additional ingressRoute middlewares (e.g. for authentication)
    # -- TLS options (e.g. secret containing certificate)
gatewayClass:
  enabled: true
  name: ""
  labels: {}
  # -- Customize updateStrategy of Deployment or DaemonSet
ingressRoute:
  dashboard:
    enabled: false
    annotations: {}
    labels: {}
    matchRule: PathPrefix(`/dashboard`) || PathPrefix(`/api`)
    services:
      - name: api@internal
        kind: TraefikService
    entryPoints:
      - traefik
    middlewares: []
    tls: {}
  healthcheck:
    enabled: false
    annotations: {}
    labels: {}
    matchRule: PathPrefix(`/ping`)
    services:
      - name: ping@internal
        kind: TraefikService
    entryPoints:
      - traefik
    middlewares: []
    tls: {}
  # -- The number of consecutive failures allowed before considering the probe as failed.
  # -- The number of seconds to wait before starting the first probe.
  # -- The number of seconds to wait between consecutive probes.
  # -- The minimum consecutive successes required to consider the probe successful.
  # -- The number of seconds to wait for a probe response before considering it as failed.
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1
  # -- The number of consecutive failures allowed before considering the probe as failed.
  # -- The number of seconds to wait before starting the first probe.
  # -- The number of seconds to wait between consecutive probes.
  # -- The minimum consecutive successes required to consider the probe successful.
  # -- The number of seconds to wait for a probe response before considering it as failed.
# -- Define [Startup Probe](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#define-startup-probes)
readinessProbe:
  failureThreshold: 1
  initialDelaySeconds: 2
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 2
livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 2
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 2
    # -- Load Kubernetes IngressRoute provider
    # -- Allows IngressRoute to reference resources in namespace other than theirs
    # -- Allows to reference ExternalName services in IngressRoute
    # -- Allows to return 503 when there is no endpoints available
    # -- When the parameter is set, only resources containing an annotation with the same value are processed. Otherwise, resources missing the annotation, having an empty value, or the value traefik are processed. It will also set required annotation on Dashboard and Healthcheck IngressRoute when enabled.
    # labelSelector: environment=production,method=traefik
    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces. . When using `rbac.namespaced`, it will watch helm release namespace and namespaces listed in this array.
    # -- Defines whether to use Native Kubernetes load-balancing mode by default.
    # -- Load Kubernetes Ingress provider
    # -- Allows to reference ExternalName services in Ingress
    # -- Allows to return 503 when there is no endpoints available
    # -- When ingressClass is set, only Ingresses containing an annotation with the same value are processed. Otherwise, Ingresses missing the annotation, having an empty value, or the value traefik are processed.
    # labelSelector: environment=production,method=traefik
    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces. . When using `rbac.namespaced`, it will watch helm release namespace and namespaces listed in this array.
    # IP used for Kubernetes Ingress endpoints
      # -- Enable [publishedService](https://doc.traefik.io/traefik/providers/kubernetes-ingress/#publishedservice)
      # -- Override path of Kubernetes Service used to copy status from. Format: namespace/servicename.
      # Default to Service deployed with this Chart.
    # -- Defines whether to use Native Kubernetes load-balancing mode by default.
    # -- Defines whether to make prefix matching strictly comply with the Kubernetes Ingress specification.
    # -- Enable Traefik Gateway provider for Gateway API
    # -- Toggles support for the Experimental Channel resources (Gateway API release channels documentation).
    # This option currently enables support for TCPRoute and TLSRoute.
    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces. . When using `rbac.namespaced`, it will watch helm release namespace and namespaces listed in this array.
    # -- A label selector can be defined to filter on specific GatewayClass objects only.
    # -- Defines whether to use Native Kubernetes load-balancing mode by default.
      # -- This IP will get copied to the Gateway status.addresses, and currently only supports one IP value (IPv4 or IPv6).
      # -- This Hostname will get copied to the Gateway status.addresses.
      # -- The Kubernetes service to copy status addresses from. When using third parties tools like External-DNS, this option can be used to copy the service loadbalancer.status (containing the service's endpoints IPs) to the gateways. Default to Service of this Chart.
    # -- Create a file provider
    # -- Allows Traefik to automatically watch for file changes
    # -- File content (YAML format, go template supported) (see https://doc.traefik.io/traefik/providers/file/)
# -- Add volumes to the traefik pod. The volume name will be passed to tpl.
# This can be used to mount a cert pair or a configmap that holds a config.toml file.
# After the volume has been mounted, add the configs into traefik by using the `additionalArguments` list below, eg:
# `additionalArguments:
# - "--providers.file.filename=/config/dynamic.toml"
# - "--ping"
# - "--ping.entrypoint=web"`
startupProbe: {}
  ## -- Single service is using `MixedProtocolLBService` feature gate.
  ## -- When set to false, it will create two Service, one for TCP and one for UDP.
  # -- Additional annotations applied to both TCP and UDP services (e.g. for cloud provider specific config)
  # -- Additional annotations for TCP service only
  # -- Additional annotations for UDP service only
  # -- Additional service labels (e.g. for filtering Service by custom labels)
  # -- Additional entries here will be added to the service spec.
  # -- Cannot contain type, selector or ports entries.
  # externalTrafficPolicy: Cluster
  # loadBalancerIP: "1.2.3.4"
  # clusterIP: "2.3.4.5"
  # - 192.168.0.1/32
  # - 172.16.0.0/16
  ## -- Class of the load balancer implementation
  # loadBalancerClass: service.k8s.aws/nlb
  # - 1.2.3.4
  ## One of SingleStack, PreferDualStack, or RequireDualStack.
  # ipFamilyPolicy: SingleStack
  ## List of IP families (e.g. IPv4 and/or IPv6).
  ## ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services
  # ipFamilies:
  #   - IPv4
  #   - IPv6
  ##
  ## -- An additional and optional internal Service.
  ## Same parameters as external Service
  # internal:
  #   type: ClusterIP
  #   # labels: {}
  #   # annotations: {}
  #   # spec: {}
  #   # loadBalancerSourceRanges: []
  #   # externalIPs: []
  #   # ipFamilies: [ "IPv4","IPv6" ]
# - name: public-cert
#   mountPath: "/certs"
#   type: secret
# - name: '{{ printf "%s-configs" .Release.Name }}'
#   mountPath: "/config"
#   type: configMap
# -- Additional volumeMounts to add to the Traefik container
providers:
  kubernetesCRD:
    enabled: true
    allowCrossNamespace: false
    allowExternalNameServices: false
    allowEmptyServices: true
  # -- Can be used to use globally v2 router syntax. Deprecated since v3.4 /!\.
  # See https://doc.traefik.io/traefik/v3.0/migration/v2-to-v3/#new-v3-syntax-notable-changes
# Traefik experimental features
    ingressClass: ""
    namespaces: []
    nativeLBByDefault: false
  kubernetesIngress:
    enabled: true
    allowExternalNameServices: false
    allowEmptyServices: true
  # -- Can be used to use globally v2 router syntax. Deprecated since v3.4 /!\.
  # See https://doc.traefik.io/traefik/v3.0/migration/v2-to-v3/#new-v3-syntax-notable-changes
# Traefik experimental features
    ingressClass: null
    namespaces: []
    publishedService:
      enabled: true
      pathOverride: ""
    nativeLBByDefault: false
    strictPrefixMatching: false
  kubernetesGateway:
    enabled: false
    experimentalChannel: false
    namespaces: []
    labelselector: ""
    nativeLBByDefault: false
    statusAddress:
      ip: ""
      hostname: ""
  # -- Create HorizontalPodAutoscaler object.
  # See EXAMPLES.md for more details.
  # -- minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down. It defaults to 1 pod.
  # -- maxReplicas is the upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.
  # -- metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).
  # -- behavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively).
  # -- scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count.
      service:
        enabled: true
        name: ""
        namespace: ""
  file:
    enabled: false
    watch: true
    content: ""
# -- For instance when using a logshipper for access logs
# - name: traefik-logs
#   mountPath: /var/log/traefik
volumes: []
    # -- Set [logs format](https://doc.traefik.io/traefik/observability/logs/#format)
    # By default, the level is set to INFO.
    # -- Alternative logging levels are TRACE, DEBUG, INFO, WARN, ERROR, FATAL, and PANIC.
    # -- To write the logs into a log file, use the filePath option.
    # -- When set to true and format is common, it disables the colorized output.
    # -- To enable access logs
    # -- Set [access log format](https://doc.traefik.io/traefik/observability/access-logs/#format)
    # filePath: "/var/log/traefik/access.log
    # -- Set [bufferingSize](https://doc.traefik.io/traefik/observability/access-logs/#bufferingsize)
    # -- Set [timezone](https://doc.traefik.io/traefik/observability/access-logs/#time-zones)
    # -- Set [filtering](https://docs.traefik.io/observability/access-logs/#filtering)
      # -- Set statusCodes, to limit the access logs to requests with a status codes in the specified range
      # -- Set retryAttempts, to keep the access logs when at least one retry has happened
      # -- Set minDuration, to keep access logs when requests take longer than the specified duration
    # -- Enables accessLogs for internal resources. Default: false.
        # -- Set default mode for fields.names
        # -- Names of the fields to limit.
      # -- [Limit logged fields or headers](https://doc.traefik.io/traefik/observability/access-logs/#limiting-the-fieldsincluding-headers)
        # -- Set default mode for fields.headers
additionalVolumeMounts: []
  # -- Enable metrics for internal resources. Default: false
  ## Prometheus is enabled by default.
  ## It can be disabled by setting "prometheus: null"
    # -- Entry point used to expose metrics.
    # -- Enable metrics on entry points. Default: true
    # -- Enable metrics on routers. Default: false
    # -- Enable metrics on services. Default: true
    # -- Buckets for latency metrics. Default="0.1,0.3,1.2,5.0"
    # -- When manualRouting is true, it disables the default internal router in
    ## order to allow creating a custom router for prometheus@internal service.
    # -- Add HTTP header labels to metrics. See EXAMPLES.md or upstream doc for usage.
      # -- Create a dedicated metrics service to use with ServiceMonitor
    # -- When set to true, it won't check if Prometheus Operator CRDs are deployed
      # -- Enable optional CR for Prometheus Operator. See EXAMPLES.md for more details.
      # -- Enable optional CR for Prometheus Operator. See EXAMPLES.md for more details.
  #  datadog:
  #    ## Address instructs exporter to send metrics to datadog-agent at this address.
  #    address: "127.0.0.1:8125"
  #    ## The interval used by the exporter to push metrics to datadog-agent. Default=10s
  #    # pushInterval: 30s
  #    ## The prefix to use for metrics collection. Default="traefik"
  #    # prefix: traefik
  #    ## Enable metrics on entry points. Default=true
  #    # addEntryPointsLabels: false
  #    ## Enable metrics on routers. Default=false
  #    # addRoutersLabels: true
  #    ## Enable metrics on services. Default=true
  #    # addServicesLabels: false
  #  influxdb2:
  #    ## Address instructs exporter to send metrics to influxdb v2 at this address.
  #    address: localhost:8086
  #    ## Token with which to connect to InfluxDB v2.
  #    token: xxx
  #    ## Organisation where metrics will be stored.
  #    org: ""
  #    ## Bucket where metrics will be stored.
  #    bucket: ""
  #    ## The interval used by the exporter to push metrics to influxdb. Default=10s
  #    # pushInterval: 30s
  #    ## Additional labels (influxdb tags) on all metrics.
  #    # additionalLabels:
  #    #   env: production
  #    #   foo: bar
  #    ## Enable metrics on entry points. Default=true
  #    # addEntryPointsLabels: false
  #    ## Enable metrics on routers. Default=false
  #    # addRoutersLabels: true
  #    ## Enable metrics on services. Default=true
  #    # addServicesLabels: false
  #  statsd:
  #    ## Address instructs exporter to send metrics to statsd at this address.
  #    address: localhost:8125
  #    ## The interval used by the exporter to push metrics to influxdb. Default=10s
  #    # pushInterval: 30s
  #    ## The prefix to use for metrics collection. Default="traefik"
  #    # prefix: traefik
  #    ## Enable metrics on entry points. Default=true
  #    # addEntryPointsLabels: false
  #    ## Enable metrics on routers. Default=false
  #    # addRoutersLabels: true
  #    ## Enable metrics on services. Default=true
  #    # addServicesLabels: false
    # -- Set to true in order to enable the OpenTelemetry metrics
    # -- Enable metrics on entry points. Default: true
    # -- Enable metrics on routers. Default: false
    # -- Enable metrics on services. Default: true
    # -- Explicit boundaries for Histogram data points. Default: [.005, .01, .025, .05, .1, .25, .5, 1, 2.5, 5, 10]
    # -- Interval at which metrics are sent to the OpenTelemetry Collector. Default: 10s
    # -- Service name used in OTLP backend. Default: traefik.
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using HTTP.
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      # -- Additional headers sent with metrics by the reporter to the OpenTelemetry Collector.
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
        # -- The path to the certificate authority, it defaults to the system bundle.
        # -- The path to the public certificate. When using this option, setting the key option is required.
        # -- The path to the private key. When using this option, setting the cert option is required.
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using gRPC
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      # -- Allows reporter to send metrics to the OpenTelemetry Collector without using a secured protocol.
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
        # -- The path to the certificate authority, it defaults to the system bundle.
        # -- The path to the public certificate. When using this option, setting the key option is required.
        # -- The path to the private key. When using this option, setting the cert option is required.
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
logs:
  general:
    format: null
    level: INFO
    filePath: ""
    noColor: false
  access:
    enabled: false
    format: null
    bufferingSize: null
    timezone: ""
    filters:
      statuscodes: ""
      retryattempts: false
      minduration: ""
    addInternals: false
    fields:
      general:
        defaultmode: keep
        names: {}
      headers:
        defaultmode: drop
        names: {}
  ## -- Single service is using `MixedProtocolLBService` feature gate.
  ## -- When set to false, it will create two Service, one for TCP and one for UDP.
  # -- Additional annotations applied to both TCP and UDP services (e.g. for cloud provider specific config)
  # -- Additional annotations for TCP service only
  # -- Additional annotations for UDP service only
  # -- Additional service labels (e.g. for filtering Service by custom labels)
  # -- Additional entries here will be added to the service spec.
  # -- Cannot contain type, selector or ports entries.
  # externalTrafficPolicy: Cluster
  # loadBalancerIP: "1.2.3.4"
  # clusterIP: "2.3.4.5"
  # - 192.168.0.1/32
  # - 172.16.0.0/16
  ## -- Class of the load balancer implementation
  # loadBalancerClass: service.k8s.aws/nlb
  # - 1.2.3.4
  ## One of SingleStack, PreferDualStack, or RequireDualStack.
  # ipFamilyPolicy: SingleStack
  ## List of IP families (e.g. IPv4 and/or IPv6).
  ## ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services
  # ipFamilies:
  #   - IPv4
  #   - IPv6
  ##
  ## -- An additional and optional internal Service.
  ## Same parameters as external Service
  # internal:
  #   type: ClusterIP
  #   # labels: {}
  #   # annotations: {}
  #   # spec: {}
  #   # loadBalancerSourceRanges: []
  #   # externalIPs: []
  #   # ipFamilies: [ "IPv4","IPv6" ]
  # -- Enable OCSP stapling support.
  # See https://doc.traefik.io/traefik/https/ocsp/#overview
  # -- Defines the OCSP responder URLs to use instead of the one provided by the certificate.
## Tracing
# -- https://doc.traefik.io/traefik/observability/tracing/overview/
metrics:
  addInternals: false
  prometheus:
    entryPoint: metrics
    addEntryPointsLabels: null
    addRoutersLabels: null
    addServicesLabels: null
    buckets: ""
    manualRouting: false
    headerLabels: {}
  # -- Create HorizontalPodAutoscaler object.
  # See EXAMPLES.md for more details.
  # -- minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down. It defaults to 1 pod.
  # -- maxReplicas is the upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.
  # -- metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).
  # -- behavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively).
  # -- scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count.
    service:
      enabled: false
      labels: {}
      annotations: {}
    disableAPICheck: null
    serviceMonitor:
      enabled: false
      apiVersion: monitoring.coreos.com/v1
      metricRelabelings: []
      relabelings: []
      jobLabel: ""
      interval: ""
      honorLabels: false
      scrapeTimeout: ""
      honorTimestamps: false
      enableHttp2: false
      followRedirects: false
      additionalLabels: {}
      namespace: ""
      namespaceSelector: {}
    prometheusRule:
      enabled: false
      apiVersion: monitoring.coreos.com/v1
      additionalLabels: {}
      namespace: ""
  otlp:
    enabled: false
    addEntryPointsLabels: null
    addRoutersLabels: null
    addServicesLabels: null
    explicitBoundaries: []
    pushInterval: ""
    serviceName: null
    http:
      enabled: false
      endpoint: ""
      headers: {}
      tls:
        ca: ""
        cert: ""
        key: ""
        insecureSkipVerify: null
    grpc:
      enabled: false
      endpoint: ""
      insecure: false
      tls:
        ca: ""
        cert: ""
        key: ""
        insecureSkipVerify: false
  # -- Enables tracing for internal resources. Default: false.
  # -- Service name used in selected backend. Default: traefik.
  # -- Defines additional resource attributes to be sent to the collector.
  # -- Defines the list of request headers to add as attributes. It applies to client and server kind spans.
  # -- Defines the list of response headers to add as attributes. It applies to client and server kind spans.
  # -- By default, all query parameters are redacted. Defines the list of query parameters to not redact.
  # -- The proportion of requests to trace, specified between 0.0 and 1.0. Default: 1.0.
    # -- See https://doc.traefik.io/traefik/v3.0/observability/tracing/opentelemetry/
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using HTTP.
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      # -- Additional headers sent with metrics by the reporter to the OpenTelemetry Collector.
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
        # -- The path to the certificate authority, it defaults to the system bundle.
        # -- The path to the public certificate. When using this option, setting the key option is required.
        # -- The path to the private key. When using this option, setting the cert option is required.
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using gRPC
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      # -- Allows reporter to send metrics to the OpenTelemetry Collector without using a secured protocol.
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
        # -- The path to the certificate authority, it defaults to the system bundle.
        # -- The path to the public certificate. When using this option, setting the key option is required.
        # -- The path to the private key. When using this option, setting the cert option is required.
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
ocsp:
  enabled: false
  responderOverrides: {}
  # -- Please take time to consider whether or not you wish to share anonymous data with us
  # See https://doc.traefik.io/traefik/contributing/data-collection/
  # -- Required for Azure Marketplace integration.
  # See https://learn.microsoft.com/en-us/partner-center/marketplace-offers/azure-container-technical-assets-kubernetes?tabs=linux,linux2#update-the-helm-chart
    # -- Enable specific values for Azure Marketplace
# -- Additional arguments to be passed at Traefik's binary
# See [CLI Reference](https://docs.traefik.io/reference/static-configuration/cli/)
# Use curly braces to pass values: `helm install --set="additionalArguments={--providers.kubernetesingress.ingressclass=traefik-internal,--log.level=DEBUG}"`
tracing:
  addInternals: false
  serviceName: null
  resourceAttributes: {}
  capturedRequestHeaders: []
  capturedResponseHeaders: []
  safeQueryParams: []
  sampleRate: null
  otlp:
    enabled: false
    http:
      enabled: false
      endpoint: ""
      headers: {}
      tls:
        ca: ""
        cert: ""
        key: ""
        insecureSkipVerify: false
    grpc:
      enabled: false
      endpoint: ""
      insecure: false
      tls:
        ca: ""
        cert: ""
        key: ""
        insecureSkipVerify: false
  # -- Traefik image host registry
  # -- Traefik image repository
  # -- defaults to appVersion. It's used for version checking, even prefixed with experimental- or latest-.
  # When a digest is required, `versionOverride` can be used to set the version.
  # -- Traefik image pull policy
# -- Add additional label to all resources
  # -- Name of `Secret` with key 'token' set to a valid license token.
  # It enables API Gateway.
  # -- Disables all external network connections.
  # -- By default, Traefik Hub provider watches all namespaces. When using `rbac.namespaced`, it will watch helm release namespace and namespaces listed in this array.
    # -- Set to true in order to enable API Management. Requires a valid license token.
      # -- WebHook admission server listen address. Default: "0.0.0.0:9943".
      # -- Certificate name of the WebHook admission server. Default: "hub-agent-cert".
      # -- By default, this chart handles directly the tls certificate required for the admission webhook. It's possible to disable this behavior and handle it outside of the chart. See EXAMPLES.md for more details.
      # -- Set custom certificate for the WebHook admission server. The certificate should be specified with _tls.crt_ and _tls.key_ in base64 encoding.
      # -- Set it to false if you need to disable Traefik Hub pod restart when mutating webhook certificate is updated. It's done with a label update.
      # -- Set custom annotations.
      # -- When set to true, it will only accept paths and methods that are explicitly defined in its OpenAPI specification
    # -- Set to true in order to enable AI Gateway. Requires a valid license token.
    # -- Hard limit for the size of request bodies inspected by the gateway. Accepts a plain integer representing **bytes**. The default value is `1048576` (1 MiB).
      # -- Enable Consul Catalog Enterprise backend with default settings.
      # -- Use local agent caching for catalog reads.
      # -- Enable Consul Connect support.
      # -- Consider every service as Connect capable by default.
      # -- Constraints is an expression that Traefik matches against the container's labels
      # -- Default rule.
        # -- The address of the Consul server
        # -- Data center to use. If not provided, the default agent data center is used
        # -- WaitTime limits how long a Watch will block. If not provided, the agent default
          # -- Basic Auth password
          # -- Basic Auth username
        # -- The URI scheme for the Consul server
          # -- TLS CA
          # -- TLS cert
          # -- TLS insecure skip verify
          # -- TLS key
        # -- Token is used to provide a per-request ACL token which overrides the agent's
      # -- Expose containers by default.
      # -- Sets the namespaces used to discover services (Consul Enterprise only).
      # -- Sets the partition used to discover services (Consul Enterprise only).
      # -- Prefix for consul service tags.
      # -- Interval for check Consul API.
      # -- Forces the read to be fully consistent.
      # -- Name of the Traefik service in Consul Catalog (needs to be registered via the
      # -- Use stale consistency for catalog reads.
      # -- A list of service health statuses to allow taking traffic.
      # -- Watch Consul API events.
      # -- Enable Microcks provider.
        # -- Microcks API client ID.
        # -- Microcks API client secret.
        # -- Microcks API endpoint.
        # -- Microcks API token.
      # -- Microcks API endpoint.
      # -- Polling interval for Microcks API.
      # -- Polling timeout for Microcks API.
        # -- TLS CA
        # -- TLS cert
        # -- TLS insecure skip verify
        # -- TLS key
    # -- Enable Redis Cluster. Default: true.
    # -- Database used to store information. Default: "0".
    # -- Endpoints of the Redis instances to connect to. Default: "".
    # -- The username to use when connecting to Redis endpoints. Default: "".
    # -- The password to use when connecting to Redis endpoints. Default: "".
      # -- Name of the set of main nodes to use for main selection. Required when using Sentinel. Default: "".
      # -- Username to use for sentinel authentication (can be different from endpoint username). Default: "".
      # -- Password to use for sentinel authentication (can be different from endpoint password). Default: "".
    # -- Timeout applied on connection with redis. Default: "0s".
      # -- Path to the certificate authority used for the secured connection.
      # -- Path to the public certificate used for the secure connection.
      # -- Path to the private key used for the secure connection.
      # -- When insecureSkipVerify is set to true, the TLS connection accepts any certificate presented by the server. Default: false.
  # Enable export of errors logs to the platform. Default: true.
    # -- Tracing headers to duplicate.
    # To configure the following, tracing.otlp.enabled needs to be set to true.
        # -- Name of the header that will contain the parent-id header copy.
        # -- Name of the header that will contain the trace-id copy.
        # -- Name of the header that will contain the traceparent copy.
        # -- Name of the header that will contain the tracestate copy.
# -- Required for OCI Marketplace integration.
# See https://docs.public.content.oci.oraclecloud.com/en-us/iaas/Content/Marketplace/understanding-helm-charts.htm
  # -- Traefik image host registry
  # -- Traefik image repository
  # -- defaults to appVersion. It's used for version checking, even prefixed with experimental- or latest-.
  # When a digest is required, `versionOverride` can be used to set the version.
  # -- Traefik image pull policy
# -- Add additional label to all resources
#  - "--providers.kubernetesingress.ingressclass=traefik-internal"
#  - "--log.level=DEBUG"
# -- Additional Environment variables to be passed to Traefik's binary
# @default -- See _values.yaml_
global:
  checkNewVersion: true
  sendAnonymousUsage: false
  azure:
    enabled: false
    images:
      proxy:
        image: traefik
        tag: latest
        registry: docker.io/library
    # -- Load Kubernetes IngressRoute provider
    # -- Allows IngressRoute to reference resources in namespace other than theirs
    # -- Allows to reference ExternalName services in IngressRoute
    # -- Allows to return 503 when there is no endpoints available
    # -- When the parameter is set, only resources containing an annotation with the same value are processed. Otherwise, resources missing the annotation, having an empty value, or the value traefik are processed. It will also set required annotation on Dashboard and Healthcheck IngressRoute when enabled.
    # labelSelector: environment=production,method=traefik
    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces. . When using `rbac.namespaced`, it will watch helm release namespace and namespaces listed in this array.
    # -- Defines whether to use Native Kubernetes load-balancing mode by default.
    # -- Load Kubernetes Ingress provider
    # -- Allows to reference ExternalName services in Ingress
    # -- Allows to return 503 when there is no endpoints available
    # -- When ingressClass is set, only Ingresses containing an annotation with the same value are processed. Otherwise, Ingresses missing the annotation, having an empty value, or the value traefik are processed.
    # labelSelector: environment=production,method=traefik
    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces. . When using `rbac.namespaced`, it will watch helm release namespace and namespaces listed in this array.
    # IP used for Kubernetes Ingress endpoints
      # -- Enable [publishedService](https://doc.traefik.io/traefik/providers/kubernetes-ingress/#publishedservice)
      # -- Override path of Kubernetes Service used to copy status from. Format: namespace/servicename.
      # Default to Service deployed with this Chart.
    # -- Defines whether to use Native Kubernetes load-balancing mode by default.
    # -- Defines whether to make prefix matching strictly comply with the Kubernetes Ingress specification.
    # -- Enable Traefik Gateway provider for Gateway API
    # -- Toggles support for the Experimental Channel resources (Gateway API release channels documentation).
    # This option currently enables support for TCPRoute and TLSRoute.
    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces. . When using `rbac.namespaced`, it will watch helm release namespace and namespaces listed in this array.
    # -- A label selector can be defined to filter on specific GatewayClass objects only.
    # -- Defines whether to use Native Kubernetes load-balancing mode by default.
      # -- This IP will get copied to the Gateway status.addresses, and currently only supports one IP value (IPv4 or IPv6).
      # -- This Hostname will get copied to the Gateway status.addresses.
      # -- The Kubernetes service to copy status addresses from. When using third parties tools like External-DNS, this option can be used to copy the service loadbalancer.status (containing the service's endpoints IPs) to the gateways. Default to Service of this Chart.
    # -- Create a file provider
    # -- Allows Traefik to automatically watch for file changes
    # -- File content (YAML format, go template supported) (see https://doc.traefik.io/traefik/providers/file/)
# -- Add volumes to the traefik pod. The volume name will be passed to tpl.
# This can be used to mount a cert pair or a configmap that holds a config.toml file.
# After the volume has been mounted, add the configs into traefik by using the `additionalArguments` list below, eg:
# `additionalArguments:
# - "--providers.file.filename=/config/dynamic.toml"
# - "--ping"
# - "--ping.entrypoint=web"`
  # -- Enables tracing for internal resources. Default: false.
  # -- Service name used in selected backend. Default: traefik.
  # -- Defines additional resource attributes to be sent to the collector.
  # -- Defines the list of request headers to add as attributes. It applies to client and server kind spans.
  # -- Defines the list of response headers to add as attributes. It applies to client and server kind spans.
  # -- By default, all query parameters are redacted. Defines the list of query parameters to not redact.
  # -- The proportion of requests to trace, specified between 0.0 and 1.0. Default: 1.0.
    # -- See https://doc.traefik.io/traefik/v3.0/observability/tracing/opentelemetry/
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using HTTP.
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      # -- Additional headers sent with metrics by the reporter to the OpenTelemetry Collector.
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
        # -- The path to the certificate authority, it defaults to the system bundle.
        # -- The path to the public certificate. When using this option, setting the key option is required.
        # -- The path to the private key. When using this option, setting the cert option is required.
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using gRPC
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      # -- Allows reporter to send metrics to the OpenTelemetry Collector without using a secured protocol.
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
        # -- The path to the certificate authority, it defaults to the system bundle.
        # -- The path to the public certificate. When using this option, setting the key option is required.
        # -- The path to the private key. When using this option, setting the cert option is required.
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
  # -- Enable specific values for Oracle Cloud Infrastructure
    # -- It needs to be an ocir repo
      hub:
        image: traefik-hub
        tag: latest
        registry: ghcr.io/traefik
# -- Environment variables to be passed to Traefik's binary from configMaps or secrets
additionalArguments: []
env: []
    # -- Use hostPort if set.
    # -- Use hostIP if set. If not set, Kubernetes will default to 0.0.0.0, which
    # means it's listening on all your interfaces and all your IPs. You may want
    # to set this value if you need traefik to listen on specific interface
    # only.
    # Defines whether the port is exposed if service.type is LoadBalancer or
    # NodePort.
    #
    # -- You SHOULD NOT expose the traefik port on production deployments.
    # If you want to access it from outside your cluster,
    # use `kubectl port-forward` or create a secure ingress
    # -- The exposed port for this service
    # -- The port protocol (TCP/UDP)
    ## -- Enable this entrypoint as a default entrypoint. When a service doesn't explicitly set an entrypoint it will only use this entrypoint.
    # asDefault: true
    # hostPort: 8000
    # containerPort: 8000
    ## -- Different target traefik port on the cluster, useful for IP type LB
    # The port protocol (TCP/UDP)
    # -- See [upstream documentation](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport)
      # -- Port Redirections
      # Added in 2.2, one can make permanent redirects via entrypoints.
      # Same sets of parameters: to, scheme, permanent and priority.
      # https://docs.traefik.io/routing/entrypoints/#redirection
      # -- Trust forwarded headers information (X-Forwarded-*).
      # -- Enable the Proxy Protocol header parsing for the entry point
    # -- Set transport settings for the entrypoint; see also
    # https://doc.traefik.io/traefik/routing/entrypoints/#transport
    ## -- Enable this entrypoint as a default entrypoint. When a service doesn't explicitly set an entrypoint it will only use this entrypoint.
    # asDefault: true
    ## -- Different target traefik port on the cluster, useful for IP type LB
    ## -- The port protocol (TCP/UDP)
    # -- See [upstream documentation](https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport)
    # -- See [upstream documentation](https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol)
    # -- See [upstream documentation](https://doc.traefik.io/traefik/routing/entrypoints/#allowacmebypass)
      ## -- Enable HTTP/3 on the entrypoint
      ## Enabling it will also enable http3 experimental feature
      ## https://doc.traefik.io/traefik/routing/entrypoints/#http3
      ## There are known limitations when trying to listen on same ports for
      ## TCP & UDP (Http3). There is a workaround in this chart using dual Service.
      ## https://github.com/kubernetes/kubernetes/issues/47249#issuecomment-587960741
        # -- Trust forwarded headers information (X-Forwarded-*).
      # -- Enable the Proxy Protocol header parsing for the entry point
    # -- See [upstream documentation](https://doc.traefik.io/traefik/routing/entrypoints/#transport)
    # --  See [upstream documentation](https://doc.traefik.io/traefik/routing/entrypoints/#tls)
    # -- One can apply Middlewares on an entrypoint
    # https://doc.traefik.io/traefik/middlewares/overview/
    # https://doc.traefik.io/traefik/routing/entrypoints/#middlewares
    # -- /!\ It introduces here a link between your static configuration and your dynamic configuration /!\
    # It follows the provider naming convention: https://doc.traefik.io/traefik/providers/overview/#provider-namespace
    #   - namespace-name1@kubernetescrd
    #   - namespace-name2@kubernetescrd
    # -- When using hostNetwork, use another port to avoid conflict with node exporter:
    # https://github.com/prometheus/prometheus/wiki/Default-port-allocations
    # -- You may not want to expose the metrics port on production deployments.
    # If you want to access it from outside your cluster,
    # use `kubectl port-forward` or create a secure ingress
    # -- The exposed port for this service
    # -- The port protocol (TCP/UDP)
# -- TLS Options are created as [TLSOption CRDs](https://doc.traefik.io/traefik/https/tls/#tls-options)
# When using `labelSelector`, you'll need to set labels on tlsOption accordingly.
# See EXAMPLE.md for details.
envFrom: []
  # -- Enable metrics for internal resources. Default: false
  ## Prometheus is enabled by default.
  ## It can be disabled by setting "prometheus: null"
    # -- Entry point used to expose metrics.
    # -- Enable metrics on entry points. Default: true
    # -- Enable metrics on routers. Default: false
    # -- Enable metrics on services. Default: true
    # -- Buckets for latency metrics. Default="0.1,0.3,1.2,5.0"
    # -- When manualRouting is true, it disables the default internal router in
    ## order to allow creating a custom router for prometheus@internal service.
    # -- Add HTTP header labels to metrics. See EXAMPLES.md or upstream doc for usage.
      # -- Create a dedicated metrics service to use with ServiceMonitor
    # -- When set to true, it won't check if Prometheus Operator CRDs are deployed
      # -- Enable optional CR for Prometheus Operator. See EXAMPLES.md for more details.
      # -- Enable optional CR for Prometheus Operator. See EXAMPLES.md for more details.
  #  datadog:
  #    ## Address instructs exporter to send metrics to datadog-agent at this address.
  #    address: "127.0.0.1:8125"
  #    ## The interval used by the exporter to push metrics to datadog-agent. Default=10s
  #    # pushInterval: 30s
  #    ## The prefix to use for metrics collection. Default="traefik"
  #    # prefix: traefik
  #    ## Enable metrics on entry points. Default=true
  #    # addEntryPointsLabels: false
  #    ## Enable metrics on routers. Default=false
  #    # addRoutersLabels: true
  #    ## Enable metrics on services. Default=true
  #    # addServicesLabels: false
  #  influxdb2:
  #    ## Address instructs exporter to send metrics to influxdb v2 at this address.
  #    address: localhost:8086
  #    ## Token with which to connect to InfluxDB v2.
  #    token: xxx
  #    ## Organisation where metrics will be stored.
  #    org: ""
  #    ## Bucket where metrics will be stored.
  #    bucket: ""
  #    ## The interval used by the exporter to push metrics to influxdb. Default=10s
  #    # pushInterval: 30s
  #    ## Additional labels (influxdb tags) on all metrics.
  #    # additionalLabels:
  #    #   env: production
  #    #   foo: bar
  #    ## Enable metrics on entry points. Default=true
  #    # addEntryPointsLabels: false
  #    ## Enable metrics on routers. Default=false
  #    # addRoutersLabels: true
  #    ## Enable metrics on services. Default=true
  #    # addServicesLabels: false
  #  statsd:
  #    ## Address instructs exporter to send metrics to statsd at this address.
  #    address: localhost:8125
  #    ## The interval used by the exporter to push metrics to influxdb. Default=10s
  #    # pushInterval: 30s
  #    ## The prefix to use for metrics collection. Default="traefik"
  #    # prefix: traefik
  #    ## Enable metrics on entry points. Default=true
  #    # addEntryPointsLabels: false
  #    ## Enable metrics on routers. Default=false
  #    # addRoutersLabels: true
  #    ## Enable metrics on services. Default=true
  #    # addServicesLabels: false
    # -- Set to true in order to enable the OpenTelemetry metrics
    # -- Enable metrics on entry points. Default: true
    # -- Enable metrics on routers. Default: false
    # -- Enable metrics on services. Default: true
    # -- Explicit boundaries for Histogram data points. Default: [.005, .01, .025, .05, .1, .25, .5, 1, 2.5, 5, 10]
    # -- Interval at which metrics are sent to the OpenTelemetry Collector. Default: 10s
    # -- Service name used in OTLP backend. Default: traefik.
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using HTTP.
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      # -- Additional headers sent with metrics by the reporter to the OpenTelemetry Collector.
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
        # -- The path to the certificate authority, it defaults to the system bundle.
        # -- The path to the public certificate. When using this option, setting the key option is required.
        # -- The path to the private key. When using this option, setting the cert option is required.
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using gRPC
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      # -- Allows reporter to send metrics to the OpenTelemetry Collector without using a secured protocol.
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
        # -- The path to the certificate authority, it defaults to the system bundle.
        # -- The path to the public certificate. When using this option, setting the key option is required.
        # -- The path to the private key. When using this option, setting the cert option is required.
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
# -- TLS Store are created as [TLSStore CRDs](https://doc.traefik.io/traefik/https/tls/#default-certificate). This is useful if you want to set a default certificate. See EXAMPLE.md for details.
ports:
  traefik:
    port: 8080
    hostPort: null
    hostIP: null
    expose:
      default: false
    exposedPort: 8080
    protocol: TCP
  web:
    port: 8000
    expose:
      default: true
    exposedPort: 80
    targetPort: null
    protocol: TCP
    nodePort: null
    redirections:
      entryPoint: {}
    forwardedHeaders:
      trustedIPs: []
      insecure: false
    proxyProtocol:
      trustedIPs: []
      insecure: false
    transport:
      respondingTimeouts:
        readTimeout: null
        writeTimeout: null
        idleTimeout: null
      lifeCycle:
        requestAcceptGraceTimeout: null
        graceTimeOut: null
      keepAliveMaxRequests: null
      keepAliveMaxTime: null
  websecure:
    port: 8443
    hostPort: null
    containerPort: null
    expose:
      default: true
    exposedPort: 443
    targetPort: null
    protocol: TCP
    nodePort: null
    appProtocol: null
    allowACMEByPass: false
    http3:
      enabled: false
      advertisedPort: null
    forwardedHeaders:
      trustedIPs: []
      insecure: false
    proxyProtocol:
      trustedIPs: []
      insecure: false
    transport:
      respondingTimeouts:
        readTimeout: null
        writeTimeout: null
        idleTimeout: null
      lifeCycle:
        requestAcceptGraceTimeout: null
        graceTimeOut: null
      keepAliveMaxRequests: null
      keepAliveMaxTime: null
    tls:
      enabled: true
      options: ""
      certResolver: ""
      domains: []
    middlewares: []
  ## -- Single service is using `MixedProtocolLBService` feature gate.
  ## -- When set to false, it will create two Service, one for TCP and one for UDP.
  # -- Additional annotations applied to both TCP and UDP services (e.g. for cloud provider specific config)
  # -- Additional annotations for TCP service only
  # -- Additional annotations for UDP service only
  # -- Additional service labels (e.g. for filtering Service by custom labels)
  # -- Additional entries here will be added to the service spec.
  # -- Cannot contain type, selector or ports entries.
  # externalTrafficPolicy: Cluster
  # loadBalancerIP: "1.2.3.4"
  # clusterIP: "2.3.4.5"
  # - 192.168.0.1/32
  # - 172.16.0.0/16
  ## -- Class of the load balancer implementation
  # loadBalancerClass: service.k8s.aws/nlb
  # - 1.2.3.4
  ## One of SingleStack, PreferDualStack, or RequireDualStack.
  # ipFamilyPolicy: SingleStack
  ## List of IP families (e.g. IPv4 and/or IPv6).
  ## ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services
  # ipFamilies:
  #   - IPv4
  #   - IPv6
  ##
  ## -- An additional and optional internal Service.
  ## Same parameters as external Service
  # internal:
  #   type: ClusterIP
  #   # labels: {}
  #   # annotations: {}
  #   # spec: {}
  #   # loadBalancerSourceRanges: []
  #   # externalIPs: []
  #   # ipFamilies: [ "IPv4","IPv6" ]
  # -- Enable OCSP stapling support.
  # See https://doc.traefik.io/traefik/https/ocsp/#overview
  # -- Defines the OCSP responder URLs to use instead of the one provided by the certificate.
## Tracing
# -- https://doc.traefik.io/traefik/observability/tracing/overview/
  metrics:
    port: 9100
    expose:
      default: false
    exposedPort: 9100
    protocol: TCP
tlsOptions: {}
  ## -- Single service is using `MixedProtocolLBService` feature gate.
  ## -- When set to false, it will create two Service, one for TCP and one for UDP.
  # -- Additional annotations applied to both TCP and UDP services (e.g. for cloud provider specific config)
  # -- Additional annotations for TCP service only
  # -- Additional annotations for UDP service only
  # -- Additional service labels (e.g. for filtering Service by custom labels)
  # -- Additional entries here will be added to the service spec.
  # -- Cannot contain type, selector or ports entries.
  # externalTrafficPolicy: Cluster
  # loadBalancerIP: "1.2.3.4"
  # clusterIP: "2.3.4.5"
  # - 192.168.0.1/32
  # - 172.16.0.0/16
  ## -- Class of the load balancer implementation
  # loadBalancerClass: service.k8s.aws/nlb
  # - 1.2.3.4
  ## One of SingleStack, PreferDualStack, or RequireDualStack.
  # ipFamilyPolicy: SingleStack
  ## List of IP families (e.g. IPv4 and/or IPv6).
  ## ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services
  # ipFamilies:
  #   - IPv4
  #   - IPv6
  ##
  ## -- An additional and optional internal Service.
  ## Same parameters as external Service
  # internal:
  #   type: ClusterIP
  #   # labels: {}
  #   # annotations: {}
  #   # spec: {}
  #   # loadBalancerSourceRanges: []
  #   # externalIPs: []
  #   # ipFamilies: [ "IPv4","IPv6" ]
tlsStore: {}
  # -- Create HorizontalPodAutoscaler object.
  # See EXAMPLES.md for more details.
  # -- minReplicas is the lower limit for the number of replicas to which the autoscaler can scale down. It defaults to 1 pod.
  # -- maxReplicas is the upper limit for the number of pods that can be set by the autoscaler; cannot be smaller than MinReplicas.
  # -- metrics contains the specifications for which to use to calculate the desired replica count (the maximum replica count across all metrics will be used).
  # -- behavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively).
  # -- scaleTargetRef points to the target resource to scale, and is used to the pods for which metrics should be collected, as well as to actually change the replica count.
service:
  enabled: true
  single: true
  type: LoadBalancer
  annotations: {}
  annotationsTCP: {}
  annotationsUDP: {}
  labels: {}
  spec: {}
  loadBalancerSourceRanges: []
  externalIPs: []
  additionalServices: {}
  # -- Enable metrics for internal resources. Default: false
  ## Prometheus is enabled by default.
  ## It can be disabled by setting "prometheus: null"
    # -- Entry point used to expose metrics.
    # -- Enable metrics on entry points. Default: true
    # -- Enable metrics on routers. Default: false
    # -- Enable metrics on services. Default: true
    # -- Buckets for latency metrics. Default="0.1,0.3,1.2,5.0"
    # -- When manualRouting is true, it disables the default internal router in
    ## order to allow creating a custom router for prometheus@internal service.
    # -- Add HTTP header labels to metrics. See EXAMPLES.md or upstream doc for usage.
      # -- Create a dedicated metrics service to use with ServiceMonitor
    # -- When set to true, it won't check if Prometheus Operator CRDs are deployed
      # -- Enable optional CR for Prometheus Operator. See EXAMPLES.md for more details.
      # -- Enable optional CR for Prometheus Operator. See EXAMPLES.md for more details.
  #  datadog:
  #    ## Address instructs exporter to send metrics to datadog-agent at this address.
  #    address: "127.0.0.1:8125"
  #    ## The interval used by the exporter to push metrics to datadog-agent. Default=10s
  #    # pushInterval: 30s
  #    ## The prefix to use for metrics collection. Default="traefik"
  #    # prefix: traefik
  #    ## Enable metrics on entry points. Default=true
  #    # addEntryPointsLabels: false
  #    ## Enable metrics on routers. Default=false
  #    # addRoutersLabels: true
  #    ## Enable metrics on services. Default=true
  #    # addServicesLabels: false
  #  influxdb2:
  #    ## Address instructs exporter to send metrics to influxdb v2 at this address.
  #    address: localhost:8086
  #    ## Token with which to connect to InfluxDB v2.
  #    token: xxx
  #    ## Organisation where metrics will be stored.
  #    org: ""
  #    ## Bucket where metrics will be stored.
  #    bucket: ""
  #    ## The interval used by the exporter to push metrics to influxdb. Default=10s
  #    # pushInterval: 30s
  #    ## Additional labels (influxdb tags) on all metrics.
  #    # additionalLabels:
  #    #   env: production
  #    #   foo: bar
  #    ## Enable metrics on entry points. Default=true
  #    # addEntryPointsLabels: false
  #    ## Enable metrics on routers. Default=false
  #    # addRoutersLabels: true
  #    ## Enable metrics on services. Default=true
  #    # addServicesLabels: false
  #  statsd:
  #    ## Address instructs exporter to send metrics to statsd at this address.
  #    address: localhost:8125
  #    ## The interval used by the exporter to push metrics to influxdb. Default=10s
  #    # pushInterval: 30s
  #    ## The prefix to use for metrics collection. Default="traefik"
  #    # prefix: traefik
  #    ## Enable metrics on entry points. Default=true
  #    # addEntryPointsLabels: false
  #    ## Enable metrics on routers. Default=false
  #    # addRoutersLabels: true
  #    ## Enable metrics on services. Default=true
  #    # addServicesLabels: false
    # -- Set to true in order to enable the OpenTelemetry metrics
    # -- Enable metrics on entry points. Default: true
    # -- Enable metrics on routers. Default: false
    # -- Enable metrics on services. Default: true
    # -- Explicit boundaries for Histogram data points. Default: [.005, .01, .025, .05, .1, .25, .5, 1, 2.5, 5, 10]
    # -- Interval at which metrics are sent to the OpenTelemetry Collector. Default: 10s
    # -- Service name used in OTLP backend. Default: traefik.
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using HTTP.
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      # -- Additional headers sent with metrics by the reporter to the OpenTelemetry Collector.
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
        # -- The path to the certificate authority, it defaults to the system bundle.
        # -- The path to the public certificate. When using this option, setting the key option is required.
        # -- The path to the private key. When using this option, setting the cert option is required.
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using gRPC
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      # -- Allows reporter to send metrics to the OpenTelemetry Collector without using a secured protocol.
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
        # -- The path to the certificate authority, it defaults to the system bundle.
        # -- The path to the public certificate. When using this option, setting the key option is required.
        # -- The path to the private key. When using this option, setting the cert option is required.
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
  # -- Enable persistence using Persistent Volume Claims
  # ref: http://kubernetes.io/docs/user-guide/persistent-volumes/.
  # It can be used to store TLS certificates along with `certificatesResolvers.<name>.acme.storage`  option
  # -- Only mount a subpath of the Volume into the pod
# -- Certificates resolvers configuration.
# Ref: https://doc.traefik.io/traefik/https/acme/#certificate-resolvers
# See EXAMPLES.md for more details.
autoscaling:
  enabled: false
  minReplicas: null
  maxReplicas: null
  ## -- Single service is using `MixedProtocolLBService` feature gate.
  ## -- When set to false, it will create two Service, one for TCP and one for UDP.
  # -- Additional annotations applied to both TCP and UDP services (e.g. for cloud provider specific config)
  # -- Additional annotations for TCP service only
  # -- Additional annotations for UDP service only
  # -- Additional service labels (e.g. for filtering Service by custom labels)
  # -- Additional entries here will be added to the service spec.
  # -- Cannot contain type, selector or ports entries.
  # externalTrafficPolicy: Cluster
  # loadBalancerIP: "1.2.3.4"
  # clusterIP: "2.3.4.5"
  # - 192.168.0.1/32
  # - 172.16.0.0/16
  ## -- Class of the load balancer implementation
  # loadBalancerClass: service.k8s.aws/nlb
  # - 1.2.3.4
  ## One of SingleStack, PreferDualStack, or RequireDualStack.
  # ipFamilyPolicy: SingleStack
  ## List of IP families (e.g. IPv4 and/or IPv6).
  ## ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services
  # ipFamilies:
  #   - IPv4
  #   - IPv6
  ##
  ## -- An additional and optional internal Service.
  ## Same parameters as external Service
  # internal:
  #   type: ClusterIP
  #   # labels: {}
  #   # annotations: {}
  #   # spec: {}
  #   # loadBalancerSourceRanges: []
  #   # externalIPs: []
  #   # ipFamilies: [ "IPv4","IPv6" ]
  # -- Enable OCSP stapling support.
  # See https://doc.traefik.io/traefik/https/ocsp/#overview
  # -- Defines the OCSP responder URLs to use instead of the one provided by the certificate.
## Tracing
# -- https://doc.traefik.io/traefik/observability/tracing/overview/
  metrics: []
  behavior: {}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: '{{ template "traefik.fullname" . }}'
# -- If hostNetwork is true, runs traefik in the host network namespace
# To prevent unschedulable pods due to port collisions, if hostNetwork=true
# and replicas>1, a pod anti-affinity is recommended and will be set if the
# affinity is left as default.
persistence:
  enabled: false
  name: data
  existingClaim: ""
  accessMode: ReadWriteOnce
  size: 128Mi
  storageClass: ""
  volumeName: ""
  path: /data
  annotations: {}
  subPath: ""
# -- Whether Role Based Access Control objects like roles and rolebindings should be created
certificatesResolvers: {}
  # When set to true:
  # 1. It switches respectively the use of `ClusterRole` and `ClusterRoleBinding` to `Role` and `RoleBinding`.
  # 2. It adds `disableIngressClassLookup` on Kubernetes Ingress with Traefik Proxy v3 until v3.1.4
  # 3. It adds `disableClusterScopeResources` on Ingress and CRD (Kubernetes) providers with Traefik Proxy v3.1.2+
  # **NOTE**: `IngressClass`, `NodePortLB` and **Gateway** provider cannot be used with namespaced RBAC.
  # See [upstream documentation](https://doc.traefik.io/traefik/providers/kubernetes-ingress/#disableclusterscoperesources) for more details.
  # Enable user-facing roles
  # https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles
  # List of Kubernetes secrets that are accessible for Traefik. If empty, then access is granted to every secret.
# -- Enable to create a PodSecurityPolicy and assign it to the Service Account via RoleBinding or ClusterRoleBinding
hostNetwork: false
# -- The service account the pods will use to interact with the Kubernetes API
rbac:
  enabled: true
  namespaced: false
  aggregateTo: []
  secretResourceNames: []
  # If set, an existing service account is used
  # If not set, a service account is created automatically using the fullname template
# -- Additional serviceAccount annotations (e.g. for oidc authentication)
podSecurityPolicy:
  enabled: false
# -- [Resources](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/) for `traefik` container.
serviceAccount:
  name: ""
# -- This example pod anti-affinity forces the scheduler to put traefik pods
# -- on nodes where no other traefik pods are scheduled.
# It should be used when hostNetwork: true to prevent port conflicts
serviceAccountAnnotations: {}
#  podAntiAffinity:
#    requiredDuringSchedulingIgnoredDuringExecution:
#      - labelSelector:
#          matchLabels:
#            app.kubernetes.io/name: '{{ template "traefik.name" . }}'
#            app.kubernetes.io/instance: '{{ .Release.Name }}-{{ include "traefik.namespace" . }}'
#        topologyKey: kubernetes.io/hostname
# -- nodeSelector is the simplest recommended form of node selection constraint.
resources:
  limits:
    cpu: 200m
  requests:
    cpu: 60m
# -- Tolerations allow the scheduler to schedule pods with matching taints.
affinity: {}
# -- You can use topology spread constraints to control
# how Pods are spread across your cluster among failure-domains.
nodeSelector: {}
# This example topologySpreadConstraints forces the scheduler to put traefik pods
# on nodes where no other traefik pods are scheduled.
#  - labelSelector:
#      matchLabels:
#        app.kubernetes.io/name: '{{ template "traefik.name" . }}'
#    maxSkew: 1
#    topologyKey: kubernetes.io/hostname
#    whenUnsatisfiable: DoNotSchedule
# -- [Pod Priority and Preemption](https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/)
tolerations: []
# -- [SecurityContext](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context-1)
# @default -- See _values.yaml_
topologySpreadConstraints: []
# -- [Pod Security Context](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/pod-v1/#security-context)
# @default -- See _values.yaml_
priorityClassName: ""
#
# -- Extra objects to deploy (value evaluated as a template)
#
# In some cases, it can avoid the need for additional, extended or adhoc deployments.
# See #595 for more details and traefik/tests/values/extra.yaml for example.
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
# -- This field override the default Release Namespace for Helm.
# It will not affect optional CRDs such as `ServiceMonitor` and `PrometheusRules`
podSecurityContext:
  runAsGroup: 65532
  runAsNonRoot: true
  runAsUser: 65532
# -- This field override the default app.kubernetes.io/instance label for all Objects.
extraObjects: []
# -- This field override the default version extracted from image.tag
namespaceOverride: ""
# Traefik Hub configuration. See https://doc.traefik.io/traefik-hub/
instanceLabelOverride: ""
  # -- Name of `Secret` with key 'token' set to a valid license token.
  # It enables API Gateway.
  # -- Disables all external network connections.
  # -- By default, Traefik Hub provider watches all namespaces. When using `rbac.namespaced`, it will watch helm release namespace and namespaces listed in this array.
    # -- Set to true in order to enable API Management. Requires a valid license token.
      # -- WebHook admission server listen address. Default: "0.0.0.0:9943".
      # -- Certificate name of the WebHook admission server. Default: "hub-agent-cert".
      # -- By default, this chart handles directly the tls certificate required for the admission webhook. It's possible to disable this behavior and handle it outside of the chart. See EXAMPLES.md for more details.
      # -- Set custom certificate for the WebHook admission server. The certificate should be specified with _tls.crt_ and _tls.key_ in base64 encoding.
      # -- Set it to false if you need to disable Traefik Hub pod restart when mutating webhook certificate is updated. It's done with a label update.
      # -- Set custom annotations.
      # -- When set to true, it will only accept paths and methods that are explicitly defined in its OpenAPI specification
    # -- Set to true in order to enable AI Gateway. Requires a valid license token.
    # -- Hard limit for the size of request bodies inspected by the gateway. Accepts a plain integer representing **bytes**. The default value is `1048576` (1 MiB).
      # -- Enable Consul Catalog Enterprise backend with default settings.
      # -- Use local agent caching for catalog reads.
      # -- Enable Consul Connect support.
      # -- Consider every service as Connect capable by default.
      # -- Constraints is an expression that Traefik matches against the container's labels
      # -- Default rule.
        # -- The address of the Consul server
        # -- Data center to use. If not provided, the default agent data center is used
        # -- WaitTime limits how long a Watch will block. If not provided, the agent default
          # -- Basic Auth password
          # -- Basic Auth username
        # -- The URI scheme for the Consul server
          # -- TLS CA
          # -- TLS cert
          # -- TLS insecure skip verify
          # -- TLS key
        # -- Token is used to provide a per-request ACL token which overrides the agent's
      # -- Expose containers by default.
      # -- Sets the namespaces used to discover services (Consul Enterprise only).
      # -- Sets the partition used to discover services (Consul Enterprise only).
      # -- Prefix for consul service tags.
      # -- Interval for check Consul API.
      # -- Forces the read to be fully consistent.
      # -- Name of the Traefik service in Consul Catalog (needs to be registered via the
      # -- Use stale consistency for catalog reads.
      # -- A list of service health statuses to allow taking traffic.
      # -- Watch Consul API events.
      # -- Enable Microcks provider.
        # -- Microcks API client ID.
        # -- Microcks API client secret.
        # -- Microcks API endpoint.
        # -- Microcks API token.
      # -- Microcks API endpoint.
      # -- Polling interval for Microcks API.
      # -- Polling timeout for Microcks API.
        # -- TLS CA
        # -- TLS cert
        # -- TLS insecure skip verify
        # -- TLS key
    # -- Enable Redis Cluster. Default: true.
    # -- Database used to store information. Default: "0".
    # -- Endpoints of the Redis instances to connect to. Default: "".
    # -- The username to use when connecting to Redis endpoints. Default: "".
    # -- The password to use when connecting to Redis endpoints. Default: "".
      # -- Name of the set of main nodes to use for main selection. Required when using Sentinel. Default: "".
      # -- Username to use for sentinel authentication (can be different from endpoint username). Default: "".
      # -- Password to use for sentinel authentication (can be different from endpoint password). Default: "".
    # -- Timeout applied on connection with redis. Default: "0s".
      # -- Path to the certificate authority used for the secured connection.
      # -- Path to the public certificate used for the secure connection.
      # -- Path to the private key used for the secure connection.
      # -- When insecureSkipVerify is set to true, the TLS connection accepts any certificate presented by the server. Default: false.
  # Enable export of errors logs to the platform. Default: true.
    # -- Tracing headers to duplicate.
    # To configure the following, tracing.otlp.enabled needs to be set to true.
        # -- Name of the header that will contain the parent-id header copy.
        # -- Name of the header that will contain the trace-id copy.
        # -- Name of the header that will contain the traceparent copy.
        # -- Name of the header that will contain the tracestate copy.
# -- Required for OCI Marketplace integration.
# See https://docs.public.content.oci.oraclecloud.com/en-us/iaas/Content/Marketplace/understanding-helm-charts.htm
versionOverride: ""
    # -- Load Kubernetes IngressRoute provider
    # -- Allows IngressRoute to reference resources in namespace other than theirs
    # -- Allows to reference ExternalName services in IngressRoute
    # -- Allows to return 503 when there is no endpoints available
    # -- When the parameter is set, only resources containing an annotation with the same value are processed. Otherwise, resources missing the annotation, having an empty value, or the value traefik are processed. It will also set required annotation on Dashboard and Healthcheck IngressRoute when enabled.
    # labelSelector: environment=production,method=traefik
    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces. . When using `rbac.namespaced`, it will watch helm release namespace and namespaces listed in this array.
    # -- Defines whether to use Native Kubernetes load-balancing mode by default.
    # -- Load Kubernetes Ingress provider
    # -- Allows to reference ExternalName services in Ingress
    # -- Allows to return 503 when there is no endpoints available
    # -- When ingressClass is set, only Ingresses containing an annotation with the same value are processed. Otherwise, Ingresses missing the annotation, having an empty value, or the value traefik are processed.
    # labelSelector: environment=production,method=traefik
    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces. . When using `rbac.namespaced`, it will watch helm release namespace and namespaces listed in this array.
    # IP used for Kubernetes Ingress endpoints
      # -- Enable [publishedService](https://doc.traefik.io/traefik/providers/kubernetes-ingress/#publishedservice)
      # -- Override path of Kubernetes Service used to copy status from. Format: namespace/servicename.
      # Default to Service deployed with this Chart.
    # -- Defines whether to use Native Kubernetes load-balancing mode by default.
    # -- Defines whether to make prefix matching strictly comply with the Kubernetes Ingress specification.
    # -- Enable Traefik Gateway provider for Gateway API
    # -- Toggles support for the Experimental Channel resources (Gateway API release channels documentation).
    # This option currently enables support for TCPRoute and TLSRoute.
    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces. . When using `rbac.namespaced`, it will watch helm release namespace and namespaces listed in this array.
    # -- A label selector can be defined to filter on specific GatewayClass objects only.
    # -- Defines whether to use Native Kubernetes load-balancing mode by default.
      # -- This IP will get copied to the Gateway status.addresses, and currently only supports one IP value (IPv4 or IPv6).
      # -- This Hostname will get copied to the Gateway status.addresses.
      # -- The Kubernetes service to copy status addresses from. When using third parties tools like External-DNS, this option can be used to copy the service loadbalancer.status (containing the service's endpoints IPs) to the gateways. Default to Service of this Chart.
    # -- Create a file provider
    # -- Allows Traefik to automatically watch for file changes
    # -- File content (YAML format, go template supported) (see https://doc.traefik.io/traefik/providers/file/)
# -- Add volumes to the traefik pod. The volume name will be passed to tpl.
# This can be used to mount a cert pair or a configmap that holds a config.toml file.
# After the volume has been mounted, add the configs into traefik by using the `additionalArguments` list below, eg:
# `additionalArguments:
# - "--providers.file.filename=/config/dynamic.toml"
# - "--ping"
# - "--ping.entrypoint=web"`
  # -- Enables tracing for internal resources. Default: false.
  # -- Service name used in selected backend. Default: traefik.
  # -- Defines additional resource attributes to be sent to the collector.
  # -- Defines the list of request headers to add as attributes. It applies to client and server kind spans.
  # -- Defines the list of response headers to add as attributes. It applies to client and server kind spans.
  # -- By default, all query parameters are redacted. Defines the list of query parameters to not redact.
  # -- The proportion of requests to trace, specified between 0.0 and 1.0. Default: 1.0.
    # -- See https://doc.traefik.io/traefik/v3.0/observability/tracing/opentelemetry/
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using HTTP.
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      # -- Additional headers sent with metrics by the reporter to the OpenTelemetry Collector.
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
        # -- The path to the certificate authority, it defaults to the system bundle.
        # -- The path to the public certificate. When using this option, setting the key option is required.
        # -- The path to the private key. When using this option, setting the cert option is required.
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using gRPC
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      # -- Allows reporter to send metrics to the OpenTelemetry Collector without using a secured protocol.
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
        # -- The path to the certificate authority, it defaults to the system bundle.
        # -- The path to the public certificate. When using this option, setting the key option is required.
        # -- The path to the private key. When using this option, setting the cert option is required.
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
  # -- Enable specific values for Oracle Cloud Infrastructure
    # -- It needs to be an ocir repo
hub:
  token: ""
  offline: null
  namespaces: []
  apimanagement:
    enabled: false
    admission:
      listenAddr: ""
      secretName: hub-agent-cert
      selfManagedCertificate: false
      customWebhookCertificate: {}
      restartOnCertificateChange: true
      annotations: {}
    openApi:
      validateRequestMethodAndPath: false
  aigateway:
    enabled: false
    maxRequestBodySize: null
  ## -- Single service is using `MixedProtocolLBService` feature gate.
  ## -- When set to false, it will create two Service, one for TCP and one for UDP.
  # -- Additional annotations applied to both TCP and UDP services (e.g. for cloud provider specific config)
  # -- Additional annotations for TCP service only
  # -- Additional annotations for UDP service only
  # -- Additional service labels (e.g. for filtering Service by custom labels)
  # -- Additional entries here will be added to the service spec.
  # -- Cannot contain type, selector or ports entries.
  # externalTrafficPolicy: Cluster
  # loadBalancerIP: "1.2.3.4"
  # clusterIP: "2.3.4.5"
  # - 192.168.0.1/32
  # - 172.16.0.0/16
  ## -- Class of the load balancer implementation
  # loadBalancerClass: service.k8s.aws/nlb
  # - 1.2.3.4
  ## One of SingleStack, PreferDualStack, or RequireDualStack.
  # ipFamilyPolicy: SingleStack
  ## List of IP families (e.g. IPv4 and/or IPv6).
  ## ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services
  # ipFamilies:
  #   - IPv4
  #   - IPv6
  ##
  ## -- An additional and optional internal Service.
  ## Same parameters as external Service
  # internal:
  #   type: ClusterIP
  #   # labels: {}
  #   # annotations: {}
  #   # spec: {}
  #   # loadBalancerSourceRanges: []
  #   # externalIPs: []
  #   # ipFamilies: [ "IPv4","IPv6" ]
# - name: public-cert
#   mountPath: "/certs"
#   type: secret
# - name: '{{ printf "%s-configs" .Release.Name }}'
#   mountPath: "/config"
#   type: configMap
# -- Additional volumeMounts to add to the Traefik container
  providers:
    consulCatalogEnterprise:
      enabled: false
      cache: false
      connectAware: false
      connectByDefault: false
      constraints: ""
      defaultRule: Host(`{{ normalize .Name }}`)
      endpoint:
        address: ""
        datacenter: ""
        endpointWaitTime: 0
        httpauth:
          password: ""
          username: ""
        scheme: ""
        tls:
          ca: ""
          cert: ""
          insecureSkipVerify: false
          key: ""
        token: ""
      exposedByDefault: true
      namespaces: ""
      partition: ""
      prefix: traefik
      refreshInterval: 15
      requireConsistent: false
      serviceName: traefik
      stale: false
      strictChecks: passing, warning
      watch: false
    microcks:
      enabled: false
      auth:
        clientId: ""
        clientSecret: ""
        endpoint: ""
        token: ""
      endpoint: ""
      pollInterval: 30
      pollTimeout: 5
      tls:
        ca: ""
        cert: ""
        insecureSkipVerify: false
        key: ""
  redis:
    cluster: null
    database: null
    endpoints: ""
    username: ""
    password: ""
    sentinel:
      masterset: ""
      username: ""
      password: ""
    timeout: ""
    tls:
      ca: ""
      cert: ""
      key: ""
      insecureSkipVerify: false
  sendlogs: null
  # -- Please take time to consider whether or not you wish to share anonymous data with us
  # See https://doc.traefik.io/traefik/contributing/data-collection/
  # -- Required for Azure Marketplace integration.
  # See https://learn.microsoft.com/en-us/partner-center/marketplace-offers/azure-container-technical-assets-kubernetes?tabs=linux,linux2#update-the-helm-chart
    # -- Enable specific values for Azure Marketplace
# -- Additional arguments to be passed at Traefik's binary
# See [CLI Reference](https://docs.traefik.io/reference/static-configuration/cli/)
# Use curly braces to pass values: `helm install --set="additionalArguments={--providers.kubernetesingress.ingressclass=traefik-internal,--log.level=DEBUG}"`
  tracing:
    additionalTraceHeaders:
      enabled: false
      traceContext:
        parentId: ""
        traceId: ""
        traceParent: ""
        traceState: ""
  # -- Traefik image host registry
  # -- Traefik image repository
  # -- defaults to appVersion. It's used for version checking, even prefixed with experimental- or latest-.
  # When a digest is required, `versionOverride` can be used to set the version.
  # -- Traefik image pull policy
# -- Add additional label to all resources
  # -- Name of `Secret` with key 'token' set to a valid license token.
  # It enables API Gateway.
  # -- Disables all external network connections.
  # -- By default, Traefik Hub provider watches all namespaces. When using `rbac.namespaced`, it will watch helm release namespace and namespaces listed in this array.
    # -- Set to true in order to enable API Management. Requires a valid license token.
      # -- WebHook admission server listen address. Default: "0.0.0.0:9943".
      # -- Certificate name of the WebHook admission server. Default: "hub-agent-cert".
      # -- By default, this chart handles directly the tls certificate required for the admission webhook. It's possible to disable this behavior and handle it outside of the chart. See EXAMPLES.md for more details.
      # -- Set custom certificate for the WebHook admission server. The certificate should be specified with _tls.crt_ and _tls.key_ in base64 encoding.
      # -- Set it to false if you need to disable Traefik Hub pod restart when mutating webhook certificate is updated. It's done with a label update.
      # -- Set custom annotations.
      # -- When set to true, it will only accept paths and methods that are explicitly defined in its OpenAPI specification
    # -- Set to true in order to enable AI Gateway. Requires a valid license token.
    # -- Hard limit for the size of request bodies inspected by the gateway. Accepts a plain integer representing **bytes**. The default value is `1048576` (1 MiB).
      # -- Enable Consul Catalog Enterprise backend with default settings.
      # -- Use local agent caching for catalog reads.
      # -- Enable Consul Connect support.
      # -- Consider every service as Connect capable by default.
      # -- Constraints is an expression that Traefik matches against the container's labels
      # -- Default rule.
        # -- The address of the Consul server
        # -- Data center to use. If not provided, the default agent data center is used
        # -- WaitTime limits how long a Watch will block. If not provided, the agent default
          # -- Basic Auth password
          # -- Basic Auth username
        # -- The URI scheme for the Consul server
          # -- TLS CA
          # -- TLS cert
          # -- TLS insecure skip verify
          # -- TLS key
        # -- Token is used to provide a per-request ACL token which overrides the agent's
      # -- Expose containers by default.
      # -- Sets the namespaces used to discover services (Consul Enterprise only).
      # -- Sets the partition used to discover services (Consul Enterprise only).
      # -- Prefix for consul service tags.
      # -- Interval for check Consul API.
      # -- Forces the read to be fully consistent.
      # -- Name of the Traefik service in Consul Catalog (needs to be registered via the
      # -- Use stale consistency for catalog reads.
      # -- A list of service health statuses to allow taking traffic.
      # -- Watch Consul API events.
      # -- Enable Microcks provider.
        # -- Microcks API client ID.
        # -- Microcks API client secret.
        # -- Microcks API endpoint.
        # -- Microcks API token.
      # -- Microcks API endpoint.
      # -- Polling interval for Microcks API.
      # -- Polling timeout for Microcks API.
        # -- TLS CA
        # -- TLS cert
        # -- TLS insecure skip verify
        # -- TLS key
    # -- Enable Redis Cluster. Default: true.
    # -- Database used to store information. Default: "0".
    # -- Endpoints of the Redis instances to connect to. Default: "".
    # -- The username to use when connecting to Redis endpoints. Default: "".
    # -- The password to use when connecting to Redis endpoints. Default: "".
      # -- Name of the set of main nodes to use for main selection. Required when using Sentinel. Default: "".
      # -- Username to use for sentinel authentication (can be different from endpoint username). Default: "".
      # -- Password to use for sentinel authentication (can be different from endpoint password). Default: "".
    # -- Timeout applied on connection with redis. Default: "0s".
      # -- Path to the certificate authority used for the secured connection.
      # -- Path to the public certificate used for the secure connection.
      # -- Path to the private key used for the secure connection.
      # -- When insecureSkipVerify is set to true, the TLS connection accepts any certificate presented by the server. Default: false.
  # Enable export of errors logs to the platform. Default: true.
    # -- Tracing headers to duplicate.
    # To configure the following, tracing.otlp.enabled needs to be set to true.
        # -- Name of the header that will contain the parent-id header copy.
        # -- Name of the header that will contain the trace-id copy.
        # -- Name of the header that will contain the traceparent copy.
        # -- Name of the header that will contain the tracestate copy.
# -- Required for OCI Marketplace integration.
# See https://docs.public.content.oci.oraclecloud.com/en-us/iaas/Content/Marketplace/understanding-helm-charts.htm
  # -- Traefik image host registry
  # -- Traefik image repository
  # -- defaults to appVersion. It's used for version checking, even prefixed with experimental- or latest-.
  # When a digest is required, `versionOverride` can be used to set the version.
  # -- Traefik image pull policy
# -- Add additional label to all resources
# Additional comments:
# Default values for Traefik
# This is a YAML-formatted file.
# Declare variables to be passed into templates
oci_meta:
  enabled: false
  repo: traefik
  images:
    proxy:
      image: traefik
      tag: latest
    # -- Load Kubernetes IngressRoute provider
    # -- Allows IngressRoute to reference resources in namespace other than theirs
    # -- Allows to reference ExternalName services in IngressRoute
    # -- Allows to return 503 when there is no endpoints available
    # -- When the parameter is set, only resources containing an annotation with the same value are processed. Otherwise, resources missing the annotation, having an empty value, or the value traefik are processed. It will also set required annotation on Dashboard and Healthcheck IngressRoute when enabled.
    # labelSelector: environment=production,method=traefik
    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces. . When using `rbac.namespaced`, it will watch helm release namespace and namespaces listed in this array.
    # -- Defines whether to use Native Kubernetes load-balancing mode by default.
    # -- Load Kubernetes Ingress provider
    # -- Allows to reference ExternalName services in Ingress
    # -- Allows to return 503 when there is no endpoints available
    # -- When ingressClass is set, only Ingresses containing an annotation with the same value are processed. Otherwise, Ingresses missing the annotation, having an empty value, or the value traefik are processed.
    # labelSelector: environment=production,method=traefik
    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces. . When using `rbac.namespaced`, it will watch helm release namespace and namespaces listed in this array.
    # IP used for Kubernetes Ingress endpoints
      # -- Enable [publishedService](https://doc.traefik.io/traefik/providers/kubernetes-ingress/#publishedservice)
      # -- Override path of Kubernetes Service used to copy status from. Format: namespace/servicename.
      # Default to Service deployed with this Chart.
    # -- Defines whether to use Native Kubernetes load-balancing mode by default.
    # -- Defines whether to make prefix matching strictly comply with the Kubernetes Ingress specification.
    # -- Enable Traefik Gateway provider for Gateway API
    # -- Toggles support for the Experimental Channel resources (Gateway API release channels documentation).
    # This option currently enables support for TCPRoute and TLSRoute.
    # -- Array of namespaces to watch. If left empty, Traefik watches all namespaces. . When using `rbac.namespaced`, it will watch helm release namespace and namespaces listed in this array.
    # -- A label selector can be defined to filter on specific GatewayClass objects only.
    # -- Defines whether to use Native Kubernetes load-balancing mode by default.
      # -- This IP will get copied to the Gateway status.addresses, and currently only supports one IP value (IPv4 or IPv6).
      # -- This Hostname will get copied to the Gateway status.addresses.
      # -- The Kubernetes service to copy status addresses from. When using third parties tools like External-DNS, this option can be used to copy the service loadbalancer.status (containing the service's endpoints IPs) to the gateways. Default to Service of this Chart.
    # -- Create a file provider
    # -- Allows Traefik to automatically watch for file changes
    # -- File content (YAML format, go template supported) (see https://doc.traefik.io/traefik/providers/file/)
# -- Add volumes to the traefik pod. The volume name will be passed to tpl.
# This can be used to mount a cert pair or a configmap that holds a config.toml file.
# After the volume has been mounted, add the configs into traefik by using the `additionalArguments` list below, eg:
# `additionalArguments:
# - "--providers.file.filename=/config/dynamic.toml"
# - "--ping"
# - "--ping.entrypoint=web"`
  # -- Enables tracing for internal resources. Default: false.
  # -- Service name used in selected backend. Default: traefik.
  # -- Defines additional resource attributes to be sent to the collector.
  # -- Defines the list of request headers to add as attributes. It applies to client and server kind spans.
  # -- Defines the list of response headers to add as attributes. It applies to client and server kind spans.
  # -- By default, all query parameters are redacted. Defines the list of query parameters to not redact.
  # -- The proportion of requests to trace, specified between 0.0 and 1.0. Default: 1.0.
    # -- See https://doc.traefik.io/traefik/v3.0/observability/tracing/opentelemetry/
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using HTTP.
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      # -- Additional headers sent with metrics by the reporter to the OpenTelemetry Collector.
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
        # -- The path to the certificate authority, it defaults to the system bundle.
        # -- The path to the public certificate. When using this option, setting the key option is required.
        # -- The path to the private key. When using this option, setting the cert option is required.
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
      # -- Set to true in order to send metrics to the OpenTelemetry Collector using gRPC
      # -- Format: <scheme>://<host>:<port><path>. Default: http://localhost:4318/v1/metrics
      # -- Allows reporter to send metrics to the OpenTelemetry Collector without using a secured protocol.
      ## Defines the TLS configuration used by the reporter to send metrics to the OpenTelemetry Collector.
        # -- The path to the certificate authority, it defaults to the system bundle.
        # -- The path to the public certificate. When using this option, setting the key option is required.
        # -- The path to the private key. When using this option, setting the cert option is required.
        # -- When set to true, the TLS connection accepts any certificate presented by the server regardless of the hostnames it covers.
  # -- Enable specific values for Oracle Cloud Infrastructure
    # -- It needs to be an ocir repo
    hub:
      image: traefik-hub
      tag: latest


# Additional comments:
# Timestamp: 2025-09-23T19:10:10.254Z